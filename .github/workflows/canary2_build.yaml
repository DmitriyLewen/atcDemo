name: build
on:
  workflow_call:
    inputs:
      goreleaser_mode:
        description: 'release or canary_build mode'
        required: true
        type: string
      goreleaser_file:
        description: 'file path to GoReleaser file'
        required: true
        type: string
      goreleaser_options:
        description: 'GoReleaser options separated by spaces'
        default: ''
        required: false
        type: string
    outputs:
      binaries-cache-key:
        description: "cache key for get Trivy binaries"
        value: ${{ jobs.release.steps.bins-cache-key.outputs.bins-cache-key }}

env:
  GO_VERSION: "1.18"
  GH_USER: "aqua-bot"

jobs:
  release:
    name: Release
    runs-on: ubuntu-18.04 # 20.04 doesn't provide createrepo for now
    env:
      DOCKER_CLI_EXPERIMENTAL: "enabled"
    permissions:
      id-token: write # For cosign
      packages: write # For GHCR
      contents: read  # Not required for public repositories, but for clarity
    outputs:
      # needed to save in reusable workflow output
      bins-cache-key: ${{ steps.bins-cache-key.outputs.bins-cache-key }}
    steps:
        # Only for release
      - name: Cosign install
        if: ${{ inputs.goreleaser_mode == 'release' }}
        uses: sigstore/cosign-installer@536b37ec5d5b543420bdfd9b744c5965bd4d8730

        # Only for release
      - name: Set up QEMU
        if: ${{ inputs.goreleaser_mode == 'release' }}
        uses: docker/setup-qemu-action@v2

        # Only for release
      - name: Set up Docker Buildx
        if: ${{ inputs.goreleaser_mode == 'release' }}
        id: buildx
        uses: docker/setup-buildx-action@v2

        # Only for release
      - name: Show available Docker Buildx platforms
        if: ${{ inputs.goreleaser_mode == 'release' }}
        run: echo ${{ steps.buildx.outputs.platforms }}

        # Only for release
      - name: Login to docker.io registry
        if: ${{ inputs.goreleaser_mode == 'release' }}
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USER }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

        # Only for release
      - name: Login to ghcr.io registry
        if: ${{ inputs.goreleaser_mode == 'release' }}
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ env.GH_USER }}
          password: ${{ secrets.GITHUB_TOKEN }}

        # Only for release
      - name: Login to ECR
        if: ${{ inputs.goreleaser_mode == 'release' }}
        uses: docker/login-action@v2
        with:
          registry: public.ecr.aws
          username: ${{ secrets.ECR_ACCESS_KEY_ID }}
          password: ${{ secrets.ECR_SECRET_ACCESS_KEY }}

        # Only for release
      - name: Generate SBOM
        if: ${{ inputs.goreleaser_mode == 'release' }}
        uses: CycloneDX/gh-gomod-generate-sbom@v1
        with:
          args: mod -licenses -json -output bom.json
          version: ^v1

      - name: Setup Go
        uses: actions/setup-go@v3
        with:
          go-version: ${{ env.GO_VERSION }}

      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Cache Go modules
        uses: actions/cache@v3.0.2
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Release
        uses: goreleaser/goreleaser-action@v3
        with:
          version: v1.4.1
          args: release -f=${{ inputs.goreleaser_file}} ${{ inputs.goreleaser_options}}
        env:
          GITHUB_TOKEN: ${{ secrets.ORG_REPO_TOKEN }}

        # cache will be used to get binaries in caller workflow
      - name: generate binaries cache key
        id: bins-cache-key
        run: echo "::set-output name=bins-cache-key::${{ runner.os }}-bins-${{ hashFiles('dist/metadata.json') }}"

      - name: Cache Trivy binaries
        uses: actions/cache@v3.0.2
        with:
          path: dist/
          key: ${{ steps.bins-cache-key.outputs.bins-cache-key }}

      - name: test-print-cache-key
        run: echo ${{ steps.bins-cache-key.outputs.bins-cache-key }}
