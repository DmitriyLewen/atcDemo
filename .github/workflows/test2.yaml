name: goreleaser
on:
  workflow_call:
    inputs:
      file:
        description: 'file path to GoReleaser file'
        required: true
        type: string
      command:
        description: 'GoReleaser command'
        required: true
        type: string
      options:
        description: 'GoReleaser options separated by spaces'
        default: ''
        required: false
        type: string
    secrets:
      DOCKERHUB_USER:
        required: false
      DOCKERHUB_TOKEN:
        required: false
      ECR_ACCESS_KEY_ID:
        required: false
      ECR_SECRET_ACCESS_KEY:
        required: false
      ORG_REPO_TOKEN:
        required: false

env:
  GO_VERSION: "1.17"
  GH_USER: "aqua-bot"

jobs:
  pre-install:
    name: pre-install
    runs-on: ubuntu-18.04 # 20.04 doesn't provide createrepo for now
    if: ${{ inputs.command == 'release' }}
    env:
      DOCKER_CLI_EXPERIMENTAL: "enabled"
    steps:
      - name: Install dependencies
        run: |
          sudo apt-get -y update
          sudo apt-get -y install rpm reprepro createrepo distro-info

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1

      - name: Show available Docker Buildx platforms
        run: echo ${{ steps.buildx.outputs.platforms }}

      - name: Login to docker.io registry
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USER }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Login to ghcr.io registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ env.GH_USER }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Login to ECR
        uses: docker/login-action@v1
        with:
          registry: public.ecr.aws
          username: ${{ secrets.ECR_ACCESS_KEY_ID }}
          password: ${{ secrets.ECR_SECRET_ACCESS_KEY }}

      - name: Checkout code
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Generate SBOM
        uses: CycloneDX/gh-gomod-generate-sbom@v1
        with:
          args: mod -licenses -json -output bom.json
          version: ^v1

  go-releaser:
    name: go-releaser
    runs-on: ubuntu-18.04 # 20.04 doesn't provide createrepo for now
    needs: [pre-install]
    if: always()
    steps:
      - name: Setup Go
        uses: actions/setup-go@v2
        with:
          go-version: ${{ env.GO_VERSION }}

      - name: Checkout code
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Cache Go modules
        uses: actions/cache@v2
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Release
        uses: goreleaser/goreleaser-action@v2
        with:
          version: v0.183.0
          args: ${{ inputs.command }} -f=${{ inputs.file }} ${{ inputs.options }}
        env:
          GITHUB_TOKEN: ${{ secrets.ORG_REPO_TOKEN }}

  test:
    name: test
    runs-on: ubuntu-18.04 # 20.04 doesn't provide createrepo for now
    needs: [go-releaser]
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: check files
        run: ls -ahl

