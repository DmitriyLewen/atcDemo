name: goreleaser
on:
  workflow_call:
    inputs:
      goreleaser_file:
        description: 'file path to GoReleaser file'
        required: true
        type: string
      goreleaser_command:
        description: 'GoReleaser command'
        required: true
        type: string
      goreleaser_options:
        description: 'GoReleaser options separated by spaces'
        default: ''
        required: false
        type: string
    secrets:
      DOCKERHUB_USER:
        required: false
      DOCKERHUB_TOKEN:
        required: false
      ECR_ACCESS_KEY_ID:
        required: false
      ECR_SECRET_ACCESS_KEY:
        required: false
      ORG_REPO_TOKEN:
        required: false

env:
  GO_VERSION: "1.17"
  GH_USER: "aqua-bot"

jobs:
  release:
    name: Release
    runs-on: ubuntu-18.04 # 20.04 doesn't provide createrepo for now
    env:
      DOCKER_CLI_EXPERIMENTAL: "enabled"
    steps:
      - name: Install dependencies # Release
        if: ${{ inputs.goreleaser_command == 'release' }}
        run: |
          sudo apt-get -y update
          sudo apt-get -y install rpm reprepro createrepo distro-info
      - name: Set up QEMU # Release
        if: ${{ inputs.goreleaser_command == 'release' }}
        uses: docker/setup-qemu-action@v1
      - name: Set up Docker Buildx # Release
        if: ${{ inputs.goreleaser_command == 'release' }}
        id: buildx
        uses: docker/setup-buildx-action@v1
      - name: Show available Docker Buildx platforms # Release
        if: ${{ inputs.goreleaser_command == 'release' }}
        run: echo ${{ steps.buildx.outputs.platforms }}
      - name: Setup Go # Release / Build
        uses: actions/setup-go@v2
        with:
          go-version: ${{ env.GO_VERSION }}
      - name: Checkout code # Release / Build
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Cache Go modules # Release / Build
        uses: actions/cache@v2
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-
      - name: Login to docker.io registry # Release
        if: ${{ inputs.goreleaser_command == 'release' }}
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USER }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Login to ghcr.io registry # Release
        if: ${{ inputs.goreleaser_command == 'release' }}
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ env.GH_USER }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Login to ECR # Release
        if: ${{ inputs.goreleaser_command == 'release' }}
        uses: docker/login-action@v1
        with:
          registry: public.ecr.aws
          username: ${{ secrets.ECR_ACCESS_KEY_ID }}
          password: ${{ secrets.ECR_SECRET_ACCESS_KEY }}
      - name: Generate SBOM # Release
        if: ${{ inputs.goreleaser_command == 'release' }}
        uses: CycloneDX/gh-gomod-generate-sbom@v1
        with:
          args: mod -licenses -json -output bom.json
          version: ^v1
      - name: Goreleaser work # Release / Build
        uses: goreleaser/goreleaser-action@v2
        with:
          version: v0.183.0
          args: ${{ inputs.goreleaser_command }} -f=${{ inputs.goreleaser_file}} ${{ inputs.goreleaser_options}}
        env:
          GITHUB_TOKEN: ${{ secrets.ORG_REPO_TOKEN }}
      - name: Checkout trivy-repo # Release
        if: ${{ inputs.goreleaser_command == 'release' }}
        uses: actions/checkout@v2
        with:
          repository: ${{ github.repository_owner }}/trivy-repo
          path: trivy-repo
          fetch-depth: 0
          token: ${{ secrets.ORG_REPO_TOKEN }}
      - name: Setup git settings # Release
        if: ${{ inputs.goreleaser_command == 'release' }}
        run: |
          git config --global user.email "knqyf263@gmail.com"
          git config --global user.name "Teppei Fukuda"
      - name: Create rpm repository # Release
        if: ${{ inputs.goreleaser_command == 'release' }}
        run: ci/deploy-rpm.sh
      - name: Import GPG key # Release
        if: ${{ inputs.goreleaser_command == 'release' }}
        run: echo -e "${{ secrets.GPG_KEY }}" | gpg --import
      - name: Create deb repository # Release
        if: ${{ inputs.goreleaser_command == 'release' }}
        run: ci/deploy-deb.sh
